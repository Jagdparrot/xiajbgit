Unique  (cost=3807.87..191900.04 rows=49940 width=4) (actual time=319.315..30043.828 rows=561 loops=1)
   InitPlan 2 (returns $1)
     ->  Result  (cost=0.61..0.62 rows=1 width=0) (actual time=0.205..0.206 rows=1 loops=1)
           InitPlan 1 (returns $0)
             ->  Limit  (cost=0.56..0.61 rows=1 width=4) (actual time=0.200..0.201 rows=1 loops=1)
                   ->  Index Only Scan Backward using "user_search.users_id_idx" on users  (cost=0.56..998062.01 rows=23173516 width=4) (actual time=0.199..0.199 rows=1 loops=1)
                         Index Cond: (id IS NOT NULL)
                         Heap Fetches: 1
   ->  Nested Loop  (cost=3807.26..191774.57 rows=49940 width=4) (actual time=319.314..29961.668 rows=384235 loops=1)
         Join Filter: (((u2.gender = u1.looking_for_gender) OR (u1.looking_for_gender = 'both'::user_search.gender)) AND (date_part('year'::text, age((('now'::cstring)::date)::timestamp with time zone, (u2.birthdate)::timestamp with time zone)) >= (u1.search_min_age)::double precision) AND (date_part('year'::text, age((('now'::cstring)::date)::timestamp with ti
me zone, (u2.birthdate)::timestamp with time zone)) <= (u1.search_max_age)::double precision))
         Rows Removed by Join Filter: 43500
         ->  Merge Join  (cost=3806.69..191770.77 rows=4 width=20) (actual time=227.952..16042.925 rows=1145140 loops=1)
               Merge Cond: (r.user_id = u1.id)
               ->  Index Scan using relationships_boosted_user_idx on relationships r  (cost=0.43..181889.60 rows=2334517 width=8) (actual time=0.693..14710.740 rows=3541676 loops=1)
               ->  Sort  (cost=3806.24..3911.37 rows=42050 width=20) (actual time=219.561..402.771 rows=1145137 loops=1)
                     Sort Key: u1.id
                     Sort Method: quicksort  Memory: 92kB
                     ->  Nested Loop  (cost=13.06..576.84 rows=42050 width=20) (actual time=4.458..217.864 rows=869 loops=1)
                           ->  HashAggregate  (cost=12.50..14.50 rows=200 width=4) (actual time=3.936..6.174 rows=2802 loops=1)
                                 ->  Function Scan on generate_series  (cost=0.00..10.00 rows=1000 width=4) (actual time=1.005..1.600 rows=2802 loops=1)
                           ->  Index Scan using "user_search.users_id_idx" on users u1  (cost=0.56..2.80 rows=1 width=16) (actual time=0.073..0.074 rows=0 loops=2802)
                                 Index Cond: (id = generate_series.generate_series)
                                 Filter: ((status = 'default'::user_search.status) AND ((((date_part('day'::text, (timezone('UTC'::text, now()) - last_activity)) - 1::double precision))::integer % 2) = 0))
                                 Rows Removed by Filter: 1
         ->  Index Scan using "user_search.users_id_idx" on users u2  (cost=0.56..0.90 rows=1 width=12) (actual time=0.010..0.010 rows=0 loops=1145140)
               Index Cond: (id = r.other_user_id)
               Filter: ((latest_location IS NOT NULL) AND (status = 'default'::user_search.status))
               Rows Removed by Filter: 1
 Total runtime: 30044.265 ms
